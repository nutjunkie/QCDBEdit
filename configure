#! /bin/bash

TOPDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
mkdir -p $TOPDIR/build

CONFIGURE_ARGS=$*

echo "QCDBEdit configured by `whoami`@`hostname`:" > configure.log
date >> configure.log
echo "" >> configure.log
echo "$0 $CONFIGURE_ARGS" >> configure.log
echo "" >> configure.log

ARCH=$(uname)
echo "Configuring build for $ARCH" >> configure.log

DEFINES=""


if [ $ARCH == 'Darwin' ]; then
   CMAKE_GENERATOR="Unix Makefiles"
   QT=/opt/homebrew/Cellar/qt@5/5.15.8_1

elif [ $ARCH == 'Linux' ]; then
   CMAKE_GENERATOR="Unix Makefiles"
   QT=/scratch/software_test/Qt5/5.12.12/gcc_64

else 
   ARCH='Windoze'
   CMAKE_GENERATOR="MinGW Makefiles"
   QT=C:/Qt/Qt5.12.12/5.12.12/mingw73_64
   MINGW_ROOT=C:/mingw64
   TOPDIR=${TOPDIR/\/cygdrive\/c/C:}

   DEFINES+=" -DQT_UIC_EXECUTABLE=${QT}/bin/uic.exe"
   DEFINES+=" -DCMAKE_C_COMPILER=${MINGW_ROOT}/bin/x86_64-w64-mingw32-gcc.exe"
   DEFINES+=" -DCMAKE_CXX_COMPILER=${MINGW_ROOT}/bin/x86_64-w64-mingw32-g++.exe"
fi


if [ -z ${CMAKE_PREFIX_PATH+x} ]; then 
   CMAKE_PREFIX=${QT}/lib/cmake/Qt5
else 
   CMAKE_PREFIX=${CMAKE_PREFIX_PATH}
fi
DEFINES+=" -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX}"

echo "QT root = $QT" >> configure.log
echo "DEFINES = $DEFINES" >> configure.log

cd $TOPDIR/build

if [ -e CMakeCache.txt ]; then
    rm CMakeCache.txt
fi

cmake -G "$CMAKE_GENERATOR" $DEFINES $TOPDIR 2>&1 | tee -a ../configure.log

if [ $ARCH == 'Windoze' ]; then
   echo "-- Run $MINGW_ROOT/bin/mingw32-make.exe inside the build directory"
fi

exit ${PIPESTATUS[0]}
